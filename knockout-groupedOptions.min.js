/*!
 * knockout-groupedOptions.js v0.11
 * 
 * Copyright (c) Andrew Jameson, www.Supertext.ch
 * Available under the MIT license: http://opensource.org/licenses/MIT
 */
ko.bindingHandlers.groupedOptions={"init":function(element){ko.utils.registerEventHandler(element,"change",function(){var property=ko.utils.domData.get(element,"property");if(typeof property==="undefined"){return}ko.utils.arrayForEach(element.getElementsByTagName("option"),function(node){if(node.selected){var data=ko.utils.domData.get(node,"data");if(typeof property==="function"){property(data)}else if(typeof property==="string"){var viewModel=ko.dataFor(element);if(viewModel!==null){viewModel[property]=data}}}})})},"update":function(element,valueAccessor){function tryGetString(property,defaultVal){return typeof property==="string"&&property.length?property:defaultVal}var h=ko.utils.unwrapObservable(valueAccessor());var groups=h.groups,groupsCollection,groupsLabel="Label",optionsCollProp="Options",optionsTextProp="Text",optionsValProp="Value";if(typeof groups==="undefined"||!groups){throw"The \"groupedOption\" binding requires a \"groups\" object be specified."}else{groupsCollection=groups.coll}if(!groupsCollection){throw"The \"groupedOption\" binding's \"groups\" object requires that a collection (array or observableArray) be specified."}if(typeof groups.label==="string"&&groups.label.length){groupsLabel=groups.label}if(typeof groups.options==="object"){var optionsConfig=groups.options;optionsCollProp=tryGetString(optionsConfig.coll,optionsCollProp);optionsTextProp=tryGetString(optionsConfig.text,optionsTextProp);optionsValProp=tryGetString(optionsConfig.val,optionsValProp)}var selectedItem=h.value,selectedValue=ko.unwrap(selectedItem);if(typeof selectedItem==="function"){ko.utils.domData.set(element,"property",selectedItem)}else if(typeof selectedItem==="string"){ko.utils.domData.set(element,"property",selectedItem)}var childCount=0,children=element.childNodes,childMax=children.length;for(var c=0;c<childMax;c++){if(children[c].nodeType===1){childCount++}}if(h.optionsCaption&&typeof h.optionsCaption==="string"&&h.optionsCaption.length){if(!childCount){var defaultOption=document.createElement("option");defaultOption.innerHTML=h.optionsCaption;element.appendChild(defaultOption)}else if(typeof groups.options==="object"){childCount--}}var coll=ko.utils.unwrapObservable(groupsCollection);childMax=coll.length;for(;childCount<childMax;childCount++){var groupLabel=ko.utils.unwrapObservable(coll[childCount][groupsLabel]);if(!groupLabel||!groupLabel.length){continue}var optGroup=document.createElement("optgroup");optGroup.setAttribute("label",groupLabel);var options=ko.utils.unwrapObservable(coll[childCount][optionsCollProp]);for(var j=0,jMax=options.length;j<jMax;j++){var thisOption=options[j],optionText=ko.utils.unwrapObservable(thisOption[optionsTextProp]);if(!optionText||!optionText.length){continue}var option=document.createElement("option");option.innerHTML=optionText;var val=ko.utils.unwrapObservable(thisOption[optionsValProp]);if(val&&val.length){option.setAttribute("value",val)}if(thisOption===selectedValue){option.setAttribute("selected","selected")}ko.utils.domData.set(option,"data",thisOption);optGroup.appendChild(option)}element.appendChild(optGroup)}return true}};
